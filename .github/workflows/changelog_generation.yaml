jobs:
  changelog-generation:
    if: 'github.event.sender.login == ''release-please[bot]'' && github.head_ref ==
      ''release-please--branches--main'' &&

      contains(github.event.pull_request.labels.*.name, ''autorelease: pending'')

      '
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - continue-on-error: true
      name: Show status of the branch checked out
      run: 'git status

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.YOSHI_CODE_BOT_TOKEN }}
      name: Fetching pull request body
      run: 'echo "Running the changelog generation script. Fetching PR body..."

        gh pr view --json body --jq ''.body'' > pr_body.txt

        echo "PR body fetched. First 10 lines:"

        head pr_body.txt

        '
    - continue-on-error: true
      name: Split the main changelog into CHANGELOG.md files in modules
      run: 'python3 .github/release-note-generation/split_release_note.py pr_body.txt
        .

        '
    - continue-on-error: true
      name: Commit the change and push to the pull request branch
      run: 'git config user.email "yoshi-code-bot@users.noreply.github.com"

        git config user.name "yoshi-code-bot"

        git remote set-url origin https://x-access-token:${{ secrets.YOSHI_CODE_BOT_TOKEN
        }}@github.com/${{ github.repository }}

        git add ./*/CHANGELOG.md

        git commit -m ''chore: update CHANGELOG.md in modules''

        git push

        '
  print-github-context:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        EVENT_CONTEXT: ${{ toJSON(github.event) }}
      run: 'echo "$EVENT_CONTEXT" | jq .

        '
name: CHANGELOG.md generation upon Release Please pull requests
on:
  repository_dispatch:
    types: trigger-ga___changelog_generation.yaml
